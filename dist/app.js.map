{"version":3,"sources":["../src/app.js"],"names":["window","onload","root","document","getElementById","TEXT_ELEMENT","rootInstance","render","element","container","reconcile","parentDom","instance","newInstance","instantiate","appendChild","dom","removeChild","type","replaceChild","updateDomProperties","props","childInstances","reconcileChildren","publicInstance","childElement","oldChildInstance","childInstance","instanceChildren","elementChildren","children","count","Math","max","length","newChildInstances","i","instanceChild","elementChild","newChild","push","filter","Boolean","isDomElement","isTextElement","createTextNode","createElement","childElements","map","childDoms","forEach","childDom","createPublicInstance","Object","assign","prevProps","nextProps","isEvent","name","startsWith","isAttribute","keys","event","removeEventListener","toLowerCase","substring","attribute","addEventListener","config","args","hasChildren","rawChildren","e","undefined","createTextElement","value","nodeValue","internalInstance","__internalInstance","updateInstance","parentNode","Component","state","partialState","App","test"],"mappings":"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","sourcesContent":["/** @jsx createElement */\nwindow.onload = () => {\n  const root = document.getElementById(\"root\");\n  const TEXT_ELEMENT = \"TEXT ELEMENT\";\n\n  let rootInstance = null;\n  function render(element, container) {\n    rootInstance = reconcile(container, rootInstance, element);\n  }\n\n  function reconcile(parentDom, instance, element) {\n    if (instance === null) {\n      const newInstance = instantiate(element);\n      parentDom.appendChild(newInstance.dom);\n      return newInstance;\n    } else if (element === null) {\n      parentDom.removeChild(instance.dom);\n    } else if (instance.element.type !== element.type) {\n      const newInstance = instantiate(element);\n      parentDom.replaceChild(newInstance.dom, instance.dom);\n      return newInstance;\n    } else if (typeof element.type === \"string\") {\n      updateDomProperties(instance.dom, instance.element.props, element.props);\n      instance.element = element;\n      instance.childInstances = reconcileChildren(instance, element);\n      return instance;\n    } else {\n      instance.publicInstance.props = element.props;\n      const childElement = instance.publicInstance.render();\n      const oldChildInstance = instance.publicInstance;\n      const childInstance = reconcile(\n        parentDom,\n        oldChildInstance,\n        childElement\n      );\n      instance.dom = childInstance.dom;\n      instance.childInstance = childInstance;\n      instance.element = element;\n      return element;\n    }\n  }\n\n  function reconcileChildren(instance, element) {\n    const dom = instance.dom;\n    const instanceChildren = instance.childInstances;\n    const elementChildren = element.props.children || [];\n    const count = Math.max(instanceChildren.length, elementChildren.length);\n    const newChildInstances = [];\n    for (let i = 0; i < count; i++) {\n      const instanceChild = instanceChildren[i];\n      const elementChild = elementChildren[i];\n      const newChild = reconcile(dom, instanceChild, elementChild);\n      newChildInstances.push(newChild);\n    }\n    return newChildInstances.filter(Boolean);\n  }\n\n  function instantiate(element) {\n    const {type, props} = element;\n    const isDomElement = typeof type === \"string\";\n    if (isDomElement) {\n      // Instantiate DOM element\n      const isTextElement = type === TEXT_ELEMENT;\n      const dom = isTextElement\n        ? document.createTextNode(\"\")\n        : document.createElement(type);\n\n      updateDomProperties(dom, [], props);\n\n      const childElements = props.children || [];\n      const childInstances = childElements.map(instantiate);\n      const childDoms = childInstances.map(childInstance => childInstance.dom);\n      childDoms.forEach(childDom => dom.appendChild(childDom));\n\n      return { dom, element, childInstances };\n    }  else {\n      // Instantiate component element\n      const instance = {};\n      const publicInstance = createPublicInstance(element, instance);\n      const childElement = publicInstance.render();\n      const childInstance = instantiate(childElement);\n      const dom = childInstance.dom;\n\n      Object.assign(instance, { dom, element, childInstance, publicInstance });\n      return instance;\n    }\n  }\n\n  function updateDomProperties(dom, prevProps, nextProps) {\n    const isEvent = name => name.startsWith(\"on\");\n    const isAttribute = name => !isEvent(name) && name !== \"children\";\n\n    Object.keys(prevProps)\n      .filter(isEvent)\n      .forEach(event =>\n        dom.removeEventListener(\n          event.toLowerCase().substring(2),\n          prevProps[event]\n        )\n      );\n\n    Object.keys(prevProps)\n      .filter(isAttribute)\n      .forEach(attribute => (dom[attribute] = null));\n\n    Object.keys(nextProps)\n      .filter(isEvent)\n      .forEach(event =>\n        dom.addEventListener(event.toLowerCase().substring(2), nextProps[event])\n      );\n\n    Object.keys(nextProps)\n      .filter(isAttribute)\n      .forEach(attribute => (dom[attribute] = nextProps[attribute]));\n  }\n\n  function createElement(type, config, ...args) {\n    const props = { ...config };\n    const hasChildren = args.length > 0;\n    const rawChildren = hasChildren ? [...args] : [];\n    props.children = rawChildren\n      .filter(e => e !== null && e !== undefined)\n      .map(e => (e instanceof Object ? e : createTextElement(e)));\n    return { type, props };\n  }\n\n  function createTextElement(value) {\n    return createElement(TEXT_ELEMENT, { nodeValue: value });\n  }\n\n  function createPublicInstance(element, internalInstance) {\n    const { type, props } = element;\n    const publicInstance = new type(props);\n    publicInstance.__internalInstance = internalInstance;\n    return publicInstance;\n  }\n\n  function updateInstance(internalInstance) {\n    const parentDom = internalInstance.dom.parentNode;\n    const element = internalInstance.element;\n    reconcile(parentDom, internalInstance, element);\n  }\n\n  class Component {\n    constructor(props) {\n      this.props = props;\n      this.state = this.state || {};\n    }\n\n    setState(partialState) {\n      this.state = Object.assign({}, this.state, partialState);\n      updateInstance(this.__internalInstance);\n    }\n  }\n\n  class App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = { test: \"does state work?\" };\n    }\n    render() {\n      return <div>{this.state.test}</div>;\n    }\n  }\n\n  const element = (\n    <div>\n      <div>hai</div>\n      <div>it works</div>\n      <input type=\"text\" value=\"julitorkaa\" />\n      <App />\n    </div>\n  );\n\n  render(element, root);\n};\n"],"file":"app.js"}